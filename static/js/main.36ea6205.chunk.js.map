{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","components/Button/Button.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","ok","Error","json","get5First","goods","sort","a","b","name","localeCompare","splice","getRedGoods","filter","good","color","GoodsList","props","className","map","style","id","Button","handleChange","type","onClick","App","state","errorMessage","loading","getGoods","setState","error","message","this","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0RAGaA,G,WAAS,WACpB,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,iBAGlB,OAAOF,EAASG,YAITC,EAAY,WACvB,OAAOP,IACJE,MAAK,SAAAM,GAAK,OACTA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACzCE,OAAO,EAAG,OAINC,EAAc,WACzB,OAAOf,IACJE,MAAK,SAAAM,GAAK,OACTA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,a,eCjBnBC,EAA6B,SAACC,GACzC,IAAQZ,EAAUY,EAAVZ,MAER,OACE,oBAAIa,UAAU,kBAAd,SACGb,EAAMc,KACL,SAAAL,GAAI,OACF,oBAEEM,MAAO,CAAEL,MAAM,GAAD,OAAKD,EAAKC,QACxBG,UAAU,kBAHZ,SAKGJ,EAAKL,MAJDK,EAAKO,UCRTC,EAA0B,SAACL,GACtC,IAAQR,EAAuBQ,EAAvBR,KAAMc,EAAiBN,EAAjBM,aAEd,OACE,wBACEC,KAAK,SACLN,UAAU,uBACVO,QAASF,EAHX,SAKGd,KCHDiB,E,4MACJC,MAAe,CACbtB,MAAO,GACPuB,aAAc,GACdC,SAAS,G,EAGXC,S,uCAAW,WAAOA,GAAP,iBAAAvB,EAAA,sEAEP,EAAKwB,SAAS,CACZH,aAAc,GACdC,SAAS,IAJJ,SAMaC,IANb,OAMDzB,EANC,OAQP,EAAK0B,SAAS,CACZ1B,QACAuB,aAAc,GACdC,SAAS,IAXJ,gDAcDG,EAdC,KAgBP,EAAKD,SAAS,CACZH,aAAcI,EAAMC,QACpBJ,SAAS,IAlBJ,yD,kGAuBX,WAAU,IAAD,OACP,EAAyCK,KAAKP,MAAtCtB,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,QAE7B,OACE,uBAAMX,UAAU,MAAhB,UACE,uDACA,0BAASA,UAAU,UAAnB,UACE,cAAC,EAAD,CAAQT,KAAK,UAAUc,aAAc,kBAAM,EAAKO,SAASjC,MACzD,cAAC,EAAD,CAAQY,KAAK,cAAcc,aAAc,kBAAM,EAAKO,SAAS1B,MAC7D,cAAC,EAAD,CAAQK,KAAK,UAAUc,aAAc,kBAAM,EAAKO,SAASlB,SAE1DgB,GACC,qBAAKV,UAAU,qBAAf,SACGU,KAGHA,IAAiBC,EACjB,iDAEAxB,EAAM8B,OAAS,GAAK,cAAC,EAAD,CAAW9B,MAAOA,Y,GAjD9B+B,IAAMC,WAwDTX,ICnEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36ea6205.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = (): Promise<Good[]> => {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Loading error');\n      }\n\n      return response.json();\n    });\n};\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      goods.sort((a, b) => a.name.localeCompare(b.name))\n        .splice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => (\n      goods.filter(good => good.color === 'red')\n    ));\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"list list-group\">\n      {goods.map(\n        good => (\n          <li\n            key={good.id}\n            style={{ color: `${good.color}` }}\n            className=\"list-group-item\"\n          >\n            {good.name}\n          </li>\n        ),\n      )}\n    </ul>\n  );\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface Props {\n  name: string;\n  handleChange: () => void;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const { name, handleChange } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-success mr-2\"\n      onClick={handleChange}\n    >\n      {name}\n    </button>\n  );\n};\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\ninterface State {\n  goods: Good[];\n  errorMessage: string;\n  loading: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n    errorMessage: '',\n    loading: false,\n  };\n\n  getGoods = async (getGoods: () => Promise<Good[]>) => {\n    try {\n      this.setState({\n        errorMessage: '',\n        loading: true,\n      });\n      const goods = await getGoods();\n\n      this.setState({\n        goods,\n        errorMessage: '',\n        loading: false,\n      });\n    } catch (e) {\n      const error = e as Error;\n\n      this.setState({\n        errorMessage: error.message,\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { goods, errorMessage, loading } = this.state;\n\n    return (\n      <main className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n        <section className=\"buttons\">\n          <Button name=\"Get all\" handleChange={() => this.getGoods(getAll)} />\n          <Button name=\"Get 5 first\" handleChange={() => this.getGoods(get5First)} />\n          <Button name=\"Get red\" handleChange={() => this.getGoods(getRedGoods)} />\n        </section>\n        {errorMessage && (\n          <div className=\"alert alert-danger\">\n            {errorMessage}\n          </div>\n        )}\n        {!errorMessage && (loading ? (\n          <h2>Please, wait...</h2>\n        ) : (\n          goods.length > 0 && <GoodsList goods={goods} />\n        ))}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}